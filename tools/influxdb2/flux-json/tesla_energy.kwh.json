[{"apiVersion":"influxdata.com/v2alpha1","kind":"Task","metadata":{"name":"vigilant-lalande-ff7001"},"spec":{"every":"1m","name":"tesla_energy.kwh","query":"import \"math\"\nimport \"date\"\n\n\n\nlasthour =\n    from(bucket: \"tesla_energy\")\n        //for historical generation change start here, otherwise use -2h for previous hour final total\n        |> range(start: date.truncate(t: -2h, unit: 1h), stop: date.truncate(t: now(), unit: 1h))\n        |> filter(fn: (r) => r[\"_measurement\"] == \"instant_power\")\n        |> filter(\n            fn: (r) =>\n                r._field == \"home\" or r._field == \"solar\" or r._field == \"grid\" or r._field\n                    ==\n                    \"to_grid\" or r._field == \"from_grid\" or r._field == \"powerwall\" or r._field\n                    ==\n                    \"to_powerwall\" or r._field == \"from_powerwall\",\n        )\n        |> aggregateWindow(every: 1h, fn: integral, createEmpty: false)\n        |> map(fn: (r) => ({r with _time: date.sub(d: 1h, from: r._time)}))\n        |> map(fn: (r) => ({r with _measurement: \"kwh\"}))\n\nlivehour =\n    from(bucket: \"tesla_energy\")\n        |> range(start: date.truncate(t: now(), unit: 1h))\n        |> filter(fn: (r) => r[\"_measurement\"] == \"instant_power\")\n        |> filter(\n            fn: (r) =>\n                r._field == \"home\" or r._field == \"solar\" or r._field == \"grid\" or r._field\n                    ==\n                    \"to_grid\" or r._field == \"from_grid\" or r._field == \"powerwall\" or r._field\n                    ==\n                    \"to_powerwall\" or r._field == \"from_powerwall\",\n        )\n        |> aggregateWindow(every: 1h, fn: integral, createEmpty: false)\n        |> map(fn: (r) => ({r with _measurement: \"kwh\"}))\n        |> map(fn: (r) => ({r with _time: date.truncate(t: now(), unit: 1h)}))\n\nunion(tables: [lasthour, livehour])\n    |> map(fn: (r) => ({r with _value: r._value / 1000.0 / 3600.0}))\n    |> to(bucket: \"tesla_energy\")"}}]