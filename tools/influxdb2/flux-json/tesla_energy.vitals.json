[{"apiVersion":"influxdata.com/v2alpha1","kind":"Task","metadata":{"name":"agitated-franklin-7f7001"},"spec":{"every":"1m","name":"tesla_energy.vitals","query":"import \"date\"\nimport \"regexp\"\n\n\ndata = from(bucket: \"raw_tesla_energy\")\r\n//for historical generation change start here, otherwise use -2m for previous minute final total\r\n  |> range(start: date.truncate(t: -2m, unit: 1m), stop: date.truncate(t: now(), unit: 1m))\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"http\")\r\n  |> drop(columns: [\"host\", \"month\", \"url\", \"year\"])\n\npinv = data\r\n  |> filter(fn: (r) => r[\"_field\"] =~ /PW[0-99]_PINV/)\r\n  |> aggregateWindow(every: 1m, fn: mean, createEmpty: false)\n\nisland = data\r\n  |> filter(fn: (r) => r[\"_field\"] =~ /ISLAND_/)\r\n  |> aggregateWindow(every: 1m, fn: mean, createEmpty: false)\n\nmeter = data\r\n  |> filter(fn: (r) => r[\"_field\"] =~ /METER_/)\r\n  |> filter(fn: (r) => r[\"_field\"] !~ /.*Life/)\r\n  |> aggregateWindow(every: 1m, fn: mean, createEmpty: false)\n\nlife = data\r\n  |> filter(fn: (r) => r[\"_field\"] =~ /_Life/)\r\n  |> aggregateWindow(every: 1m, fn: last, createEmpty: false)\n\nunion(tables: [pinv, island, meter, life])\r\n  |> drop(columns: [\"_start\", \"_stop\"])\r\n  |> map(fn: (r) => ({r with _measurement: \"vitals\"}))\r\n  |> to(bucket: \"tesla_energy\")"}}]